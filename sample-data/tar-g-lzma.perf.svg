<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>[liblzma.so.5.2.5] (666,250,000 samples, 10.27%)</title><rect x="1058.8" y="261" width="121.2" height="15.0" fill="rgb(207,162,30)" rx="2" ry="2" />
<text  x="1061.75" y="271.5" >[liblzma.so.5.2..</text>
</g>
<g >
<title>ima_file_check (750,000 samples, 0.01%)</title><rect x="14.4" y="149" width="0.1" height="15.0" fill="rgb(240,177,17)" rx="2" ry="2" />
<text  x="17.37" y="159.5" ></text>
</g>
<g >
<title>write (2,750,000 samples, 0.04%)</title><rect x="1188.8" y="277" width="0.5" height="15.0" fill="rgb(225,11,38)" rx="2" ry="2" />
<text  x="1191.82" y="287.5" ></text>
</g>
<g >
<title>free_unref_page (750,000 samples, 0.01%)</title><rect x="1183.9" y="101" width="0.2" height="15.0" fill="rgb(239,111,14)" rx="2" ry="2" />
<text  x="1186.95" y="111.5" ></text>
</g>
<g >
<title>__lock_text_start (1,500,000 samples, 0.02%)</title><rect x="1030.0" y="117" width="0.3" height="15.0" fill="rgb(214,216,52)" rx="2" ry="2" />
<text  x="1033.00" y="127.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1,000,000 samples, 0.02%)</title><rect x="1189.0" y="101" width="0.2" height="15.0" fill="rgb(216,130,39)" rx="2" ry="2" />
<text  x="1192.00" y="111.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1,750,000 samples, 0.03%)</title><rect x="1189.7" y="69" width="0.3" height="15.0" fill="rgb(252,95,16)" rx="2" ry="2" />
<text  x="1192.68" y="79.5" ></text>
</g>
<g >
<title>alloc_pages_vma (7,500,000 samples, 0.12%)</title><rect x="1028.6" y="165" width="1.4" height="15.0" fill="rgb(230,62,48)" rx="2" ry="2" />
<text  x="1031.64" y="175.5" ></text>
</g>
<g >
<title>apparmor_file_permission (750,000 samples, 0.01%)</title><rect x="15.6" y="149" width="0.2" height="15.0" fill="rgb(226,170,53)" rx="2" ry="2" />
<text  x="18.64" y="159.5" ></text>
</g>
<g >
<title>generic_file_read_iter (4,250,000 samples, 0.07%)</title><rect x="14.8" y="149" width="0.8" height="15.0" fill="rgb(239,2,28)" rx="2" ry="2" />
<text  x="17.82" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,000,000 samples, 0.05%)</title><rect x="14.1" y="245" width="0.6" height="15.0" fill="rgb(214,84,21)" rx="2" ry="2" />
<text  x="17.14" y="255.5" ></text>
</g>
<g >
<title>__put_page (1,750,000 samples, 0.03%)</title><rect x="1183.8" y="117" width="0.3" height="15.0" fill="rgb(217,40,36)" rx="2" ry="2" />
<text  x="1186.77" y="127.5" ></text>
</g>
<g >
<title>zap_pte_range (3,250,000 samples, 0.05%)</title><rect x="1189.4" y="101" width="0.6" height="15.0" fill="rgb(210,178,51)" rx="2" ry="2" />
<text  x="1192.41" y="111.5" ></text>
</g>
<g >
<title>__alloc_pages (1,500,000 samples, 0.02%)</title><rect x="19.2" y="149" width="0.3" height="15.0" fill="rgb(243,29,2)" rx="2" ry="2" />
<text  x="22.19" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,500,000 samples, 0.13%)</title><rect x="12.4" y="261" width="1.5" height="15.0" fill="rgb(252,211,42)" rx="2" ry="2" />
<text  x="15.37" y="271.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (750,000 samples, 0.01%)</title><rect x="1028.3" y="165" width="0.2" height="15.0" fill="rgb(251,9,17)" rx="2" ry="2" />
<text  x="1031.32" y="175.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1,500,000 samples, 0.02%)</title><rect x="17.3" y="165" width="0.3" height="15.0" fill="rgb(230,145,32)" rx="2" ry="2" />
<text  x="20.32" y="175.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (3,250,000 samples, 0.05%)</title><rect x="1189.4" y="117" width="0.6" height="15.0" fill="rgb(240,84,36)" rx="2" ry="2" />
<text  x="1192.41" y="127.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (18,750,000 samples, 0.29%)</title><rect x="1180.4" y="133" width="3.4" height="15.0" fill="rgb(209,201,40)" rx="2" ry="2" />
<text  x="1183.36" y="143.5" ></text>
</g>
<g >
<title>ksys_write (7,500,000 samples, 0.12%)</title><rect x="16.4" y="229" width="1.4" height="15.0" fill="rgb(251,55,52)" rx="2" ry="2" />
<text  x="19.41" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (1,500,000 samples, 0.02%)</title><rect x="11.9" y="197" width="0.3" height="15.0" fill="rgb(252,32,42)" rx="2" ry="2" />
<text  x="14.91" y="207.5" ></text>
</g>
<g >
<title>vfs_statx (7,000,000 samples, 0.11%)</title><rect x="12.5" y="197" width="1.3" height="15.0" fill="rgb(248,125,23)" rx="2" ry="2" />
<text  x="15.50" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_read (6,750,000 samples, 0.10%)</title><rect x="14.7" y="229" width="1.2" height="15.0" fill="rgb(212,207,29)" rx="2" ry="2" />
<text  x="17.69" y="239.5" ></text>
</g>
<g >
<title>do_anonymous_page (12,500,000 samples, 0.19%)</title><rect x="1028.3" y="181" width="2.2" height="15.0" fill="rgb(241,25,47)" rx="2" ry="2" />
<text  x="1031.27" y="191.5" ></text>
</g>
<g >
<title>[unknown] (690,750,000 samples, 10.65%)</title><rect x="1058.7" y="277" width="125.7" height="15.0" fill="rgb(251,141,44)" rx="2" ry="2" />
<text  x="1061.71" y="287.5" >[unknown]</text>
</g>
<g >
<title>do_syscall_64 (1,750,000 samples, 0.03%)</title><rect x="11.9" y="245" width="0.3" height="15.0" fill="rgb(233,92,25)" rx="2" ry="2" />
<text  x="14.87" y="255.5" ></text>
</g>
<g >
<title>unmap_page_range (3,250,000 samples, 0.05%)</title><rect x="1189.4" y="133" width="0.6" height="15.0" fill="rgb(210,98,2)" rx="2" ry="2" />
<text  x="1192.41" y="143.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (750,000 samples, 0.01%)</title><rect x="19.5" y="133" width="0.1" height="15.0" fill="rgb(231,204,4)" rx="2" ry="2" />
<text  x="22.46" y="143.5" ></text>
</g>
<g >
<title>read (7,250,000 samples, 0.11%)</title><rect x="14.7" y="277" width="1.3" height="15.0" fill="rgb(216,148,22)" rx="2" ry="2" />
<text  x="17.69" y="287.5" ></text>
</g>
<g >
<title>__lock_text_start (750,000 samples, 0.01%)</title><rect x="19.5" y="117" width="0.1" height="15.0" fill="rgb(211,11,28)" rx="2" ry="2" />
<text  x="22.46" y="127.5" ></text>
</g>
<g >
<title>vfs_write (7,250,000 samples, 0.11%)</title><rect x="16.5" y="213" width="1.3" height="15.0" fill="rgb(242,38,45)" rx="2" ry="2" />
<text  x="19.46" y="223.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (750,000 samples, 0.01%)</title><rect x="15.4" y="101" width="0.2" height="15.0" fill="rgb(234,174,38)" rx="2" ry="2" />
<text  x="18.41" y="111.5" ></text>
</g>
<g >
<title>do_user_addr_fault (23,250,000 samples, 0.36%)</title><rect x="1026.7" y="245" width="4.3" height="15.0" fill="rgb(244,102,15)" rx="2" ry="2" />
<text  x="1029.73" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,500,000 samples, 0.02%)</title><rect x="19.2" y="133" width="0.3" height="15.0" fill="rgb(207,164,8)" rx="2" ry="2" />
<text  x="22.19" y="143.5" ></text>
</g>
<g >
<title>clear_page_erms (1,500,000 samples, 0.02%)</title><rect x="17.0" y="117" width="0.2" height="15.0" fill="rgb(206,64,50)" rx="2" ry="2" />
<text  x="19.96" y="127.5" ></text>
</g>
<g >
<title>[unknown] (870,000,000 samples, 13.42%)</title><rect x="1031.0" y="293" width="158.3" height="15.0" fill="rgb(212,160,24)" rx="2" ry="2" />
<text  x="1034.00" y="303.5" >[unknown]</text>
</g>
<g >
<title>fstatat64 (9,000,000 samples, 0.14%)</title><rect x="12.3" y="277" width="1.6" height="15.0" fill="rgb(240,93,4)" rx="2" ry="2" />
<text  x="15.27" y="287.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (750,000 samples, 0.01%)</title><rect x="19.5" y="165" width="0.1" height="15.0" fill="rgb(240,34,43)" rx="2" ry="2" />
<text  x="22.46" y="175.5" ></text>
</g>
<g >
<title>exc_page_fault (5,250,000 samples, 0.08%)</title><rect x="18.7" y="261" width="1.0" height="15.0" fill="rgb(244,163,26)" rx="2" ry="2" />
<text  x="21.73" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (24,000,000 samples, 0.37%)</title><rect x="1180.0" y="229" width="4.4" height="15.0" fill="rgb(241,217,1)" rx="2" ry="2" />
<text  x="1183.04" y="239.5" ></text>
</g>
<g >
<title>exit_mmap (3,750,000 samples, 0.06%)</title><rect x="1189.3" y="181" width="0.7" height="15.0" fill="rgb(220,116,8)" rx="2" ry="2" />
<text  x="1192.32" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_openat (3,000,000 samples, 0.05%)</title><rect x="14.1" y="229" width="0.6" height="15.0" fill="rgb(216,84,0)" rx="2" ry="2" />
<text  x="17.14" y="239.5" ></text>
</g>
<g >
<title>write (9,250,000 samples, 0.14%)</title><rect x="16.2" y="293" width="1.7" height="15.0" fill="rgb(250,17,27)" rx="2" ry="2" />
<text  x="19.19" y="303.5" ></text>
</g>
<g >
<title>filemap_read (4,250,000 samples, 0.07%)</title><rect x="14.8" y="133" width="0.8" height="15.0" fill="rgb(223,149,48)" rx="2" ry="2" />
<text  x="17.82" y="143.5" ></text>
</g>
<g >
<title>clear_page_erms (1,500,000 samples, 0.02%)</title><rect x="1179.1" y="69" width="0.3" height="15.0" fill="rgb(218,229,32)" rx="2" ry="2" />
<text  x="1182.13" y="79.5" ></text>
</g>
<g >
<title>ext4_file_getattr (1,250,000 samples, 0.02%)</title><rect x="13.5" y="165" width="0.3" height="15.0" fill="rgb(249,107,52)" rx="2" ry="2" />
<text  x="16.55" y="175.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5,500,000 samples, 0.08%)</title><rect x="1028.9" y="133" width="1.0" height="15.0" fill="rgb(223,129,8)" rx="2" ry="2" />
<text  x="1031.86" y="143.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3,000,000 samples, 0.05%)</title><rect x="14.9" y="117" width="0.5" height="15.0" fill="rgb(254,86,39)" rx="2" ry="2" />
<text  x="17.87" y="127.5" ></text>
</g>
<g >
<title>xz (6,441,250,000 samples, 99.33%)</title><rect x="17.9" y="309" width="1172.1" height="15.0" fill="rgb(222,13,10)" rx="2" ry="2" />
<text  x="20.87" y="319.5" >xz</text>
</g>
<g >
<title>do_user_addr_fault (7,000,000 samples, 0.11%)</title><rect x="1178.7" y="213" width="1.3" height="15.0" fill="rgb(219,75,13)" rx="2" ry="2" />
<text  x="1181.72" y="223.5" ></text>
</g>
<g >
<title>vfs_write (2,250,000 samples, 0.03%)</title><rect x="1188.9" y="197" width="0.4" height="15.0" fill="rgb(238,13,41)" rx="2" ry="2" />
<text  x="1191.91" y="207.5" ></text>
</g>
<g >
<title>pagecache_get_page (1,000,000 samples, 0.02%)</title><rect x="1189.0" y="85" width="0.2" height="15.0" fill="rgb(225,164,16)" rx="2" ry="2" />
<text  x="1192.00" y="95.5" ></text>
</g>
<g >
<title>getname_flags (1,000,000 samples, 0.02%)</title><rect x="13.2" y="165" width="0.2" height="15.0" fill="rgb(220,35,54)" rx="2" ry="2" />
<text  x="16.18" y="175.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (750,000 samples, 0.01%)</title><rect x="1030.4" y="133" width="0.1" height="15.0" fill="rgb(205,146,9)" rx="2" ry="2" />
<text  x="1033.41" y="143.5" ></text>
</g>
<g >
<title>filemap_get_pages (750,000 samples, 0.01%)</title><rect x="15.4" y="117" width="0.2" height="15.0" fill="rgb(237,184,33)" rx="2" ry="2" />
<text  x="18.41" y="127.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (2,250,000 samples, 0.03%)</title><rect x="1188.9" y="149" width="0.4" height="15.0" fill="rgb(221,214,9)" rx="2" ry="2" />
<text  x="1191.91" y="159.5" ></text>
</g>
<g >
<title>getdents64 (1,250,000 samples, 0.02%)</title><rect x="13.9" y="277" width="0.2" height="15.0" fill="rgb(241,73,26)" rx="2" ry="2" />
<text  x="16.91" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,750,000 samples, 0.03%)</title><rect x="1179.1" y="85" width="0.3" height="15.0" fill="rgb(227,154,22)" rx="2" ry="2" />
<text  x="1182.13" y="95.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1,750,000 samples, 0.03%)</title><rect x="1179.6" y="101" width="0.3" height="15.0" fill="rgb(228,180,13)" rx="2" ry="2" />
<text  x="1182.58" y="111.5" ></text>
</g>
<g >
<title>clear_page_erms (1,500,000 samples, 0.02%)</title><rect x="19.2" y="117" width="0.3" height="15.0" fill="rgb(212,99,0)" rx="2" ry="2" />
<text  x="22.19" y="127.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (750,000 samples, 0.01%)</title><rect x="13.8" y="229" width="0.1" height="15.0" fill="rgb(226,188,54)" rx="2" ry="2" />
<text  x="16.78" y="239.5" ></text>
</g>
<g >
<title>charge_memcg (750,000 samples, 0.01%)</title><rect x="1028.5" y="149" width="0.1" height="15.0" fill="rgb(217,211,32)" rx="2" ry="2" />
<text  x="1031.45" y="159.5" ></text>
</g>
<g >
<title>unmap_vmas (3,250,000 samples, 0.05%)</title><rect x="1189.4" y="165" width="0.6" height="15.0" fill="rgb(238,84,11)" rx="2" ry="2" />
<text  x="1192.41" y="175.5" ></text>
</g>
<g >
<title>user_path_at_empty (5,000,000 samples, 0.08%)</title><rect x="12.6" y="181" width="0.9" height="15.0" fill="rgb(233,110,12)" rx="2" ry="2" />
<text  x="15.64" y="191.5" ></text>
</g>
<g >
<title>generic_perform_write (2,250,000 samples, 0.03%)</title><rect x="1188.9" y="133" width="0.4" height="15.0" fill="rgb(237,189,9)" rx="2" ry="2" />
<text  x="1191.91" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,250,000 samples, 0.11%)</title><rect x="14.7" y="245" width="1.3" height="15.0" fill="rgb(246,89,50)" rx="2" ry="2" />
<text  x="17.69" y="255.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (1,000,000 samples, 0.02%)</title><rect x="13.2" y="149" width="0.2" height="15.0" fill="rgb(213,205,13)" rx="2" ry="2" />
<text  x="16.18" y="159.5" ></text>
</g>
<g >
<title>filename_lookup (3,000,000 samples, 0.05%)</title><rect x="12.6" y="165" width="0.6" height="15.0" fill="rgb(207,57,21)" rx="2" ry="2" />
<text  x="15.64" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_write (7,500,000 samples, 0.12%)</title><rect x="16.4" y="245" width="1.4" height="15.0" fill="rgb(242,99,21)" rx="2" ry="2" />
<text  x="19.41" y="255.5" ></text>
</g>
<g >
<title>lru_cache_add (1,500,000 samples, 0.02%)</title><rect x="1030.0" y="149" width="0.3" height="15.0" fill="rgb(216,208,21)" rx="2" ry="2" />
<text  x="1033.00" y="159.5" ></text>
</g>
<g >
<title>schedule (750,000 samples, 0.01%)</title><rect x="17.6" y="165" width="0.2" height="15.0" fill="rgb(233,91,7)" rx="2" ry="2" />
<text  x="20.64" y="175.5" ></text>
</g>
<g >
<title>do_user_addr_fault (5,250,000 samples, 0.08%)</title><rect x="18.7" y="245" width="1.0" height="15.0" fill="rgb(210,117,52)" rx="2" ry="2" />
<text  x="21.73" y="255.5" ></text>
</g>
<g >
<title>vfs_read (6,000,000 samples, 0.09%)</title><rect x="14.8" y="197" width="1.1" height="15.0" fill="rgb(225,101,31)" rx="2" ry="2" />
<text  x="17.82" y="207.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1,500,000 samples, 0.02%)</title><rect x="19.2" y="165" width="0.3" height="15.0" fill="rgb(225,62,7)" rx="2" ry="2" />
<text  x="22.19" y="175.5" ></text>
</g>
<g >
<title>lru_cache_add (750,000 samples, 0.01%)</title><rect x="19.5" y="149" width="0.1" height="15.0" fill="rgb(245,111,13)" rx="2" ry="2" />
<text  x="22.46" y="159.5" ></text>
</g>
<g >
<title>____fput (1,000,000 samples, 0.02%)</title><rect x="12.0" y="165" width="0.2" height="15.0" fill="rgb(233,32,37)" rx="2" ry="2" />
<text  x="15.00" y="175.5" ></text>
</g>
<g >
<title>do_anonymous_page (3,000,000 samples, 0.05%)</title><rect x="19.1" y="181" width="0.5" height="15.0" fill="rgb(217,62,20)" rx="2" ry="2" />
<text  x="22.10" y="191.5" ></text>
</g>
<g >
<title>task_work_run (1,000,000 samples, 0.02%)</title><rect x="12.0" y="181" width="0.2" height="15.0" fill="rgb(232,157,30)" rx="2" ry="2" />
<text  x="15.00" y="191.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (7,000,000 samples, 0.11%)</title><rect x="1178.7" y="245" width="1.3" height="15.0" fill="rgb(205,153,29)" rx="2" ry="2" />
<text  x="1181.72" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (5,500,000 samples, 0.08%)</title><rect x="1179.0" y="197" width="1.0" height="15.0" fill="rgb(217,218,22)" rx="2" ry="2" />
<text  x="1181.99" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,000,000 samples, 0.12%)</title><rect x="16.4" y="261" width="1.5" height="15.0" fill="rgb(218,201,18)" rx="2" ry="2" />
<text  x="19.41" y="271.5" ></text>
</g>
<g >
<title>[unknown] (29,000,000 samples, 0.45%)</title><rect x="10.7" y="293" width="5.3" height="15.0" fill="rgb(229,178,19)" rx="2" ry="2" />
<text  x="13.73" y="303.5" ></text>
</g>
<g >
<title>alloc_pages (3,250,000 samples, 0.05%)</title><rect x="16.7" y="165" width="0.6" height="15.0" fill="rgb(233,193,6)" rx="2" ry="2" />
<text  x="19.69" y="175.5" ></text>
</g>
<g >
<title>__alloc_pages (6,500,000 samples, 0.10%)</title><rect x="1028.7" y="149" width="1.2" height="15.0" fill="rgb(220,28,34)" rx="2" ry="2" />
<text  x="1031.68" y="159.5" ></text>
</g>
<g >
<title>openat64 (3,000,000 samples, 0.05%)</title><rect x="14.1" y="277" width="0.6" height="15.0" fill="rgb(247,105,14)" rx="2" ry="2" />
<text  x="17.14" y="287.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (750,000 samples, 0.01%)</title><rect x="1183.8" y="101" width="0.1" height="15.0" fill="rgb(227,152,4)" rx="2" ry="2" />
<text  x="1186.77" y="111.5" ></text>
</g>
<g >
<title>[tar] (3,000,000 samples, 0.05%)</title><rect x="10.2" y="293" width="0.5" height="15.0" fill="rgb(239,183,17)" rx="2" ry="2" />
<text  x="13.18" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (7,250,000 samples, 0.11%)</title><rect x="12.5" y="229" width="1.3" height="15.0" fill="rgb(238,136,43)" rx="2" ry="2" />
<text  x="15.46" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,000,000 samples, 0.02%)</title><rect x="13.4" y="149" width="0.1" height="15.0" fill="rgb(225,154,47)" rx="2" ry="2" />
<text  x="16.37" y="159.5" ></text>
</g>
<g >
<title>do_filp_open (2,250,000 samples, 0.03%)</title><rect x="14.2" y="197" width="0.4" height="15.0" fill="rgb(209,139,38)" rx="2" ry="2" />
<text  x="17.19" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (16,000,000 samples, 0.25%)</title><rect x="1028.0" y="229" width="2.9" height="15.0" fill="rgb(250,24,32)" rx="2" ry="2" />
<text  x="1030.95" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (1,250,000 samples, 0.02%)</title><rect x="13.9" y="229" width="0.2" height="15.0" fill="rgb(233,196,39)" rx="2" ry="2" />
<text  x="16.91" y="239.5" ></text>
</g>
<g >
<title>path_lookupat (3,000,000 samples, 0.05%)</title><rect x="12.6" y="149" width="0.6" height="15.0" fill="rgb(226,149,52)" rx="2" ry="2" />
<text  x="15.64" y="159.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (750,000 samples, 0.01%)</title><rect x="14.0" y="165" width="0.1" height="15.0" fill="rgb(215,120,50)" rx="2" ry="2" />
<text  x="17.00" y="175.5" ></text>
</g>
<g >
<title>__mod_node_page_state (750,000 samples, 0.01%)</title><rect x="1030.4" y="117" width="0.1" height="15.0" fill="rgb(205,137,53)" rx="2" ry="2" />
<text  x="1033.41" y="127.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1,000,000 samples, 0.02%)</title><rect x="1184.1" y="133" width="0.2" height="15.0" fill="rgb(207,23,49)" rx="2" ry="2" />
<text  x="1187.09" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,250,000 samples, 0.02%)</title><rect x="13.9" y="261" width="0.2" height="15.0" fill="rgb(221,148,39)" rx="2" ry="2" />
<text  x="16.91" y="271.5" ></text>
</g>
<g >
<title>[tar] (3,000,000 samples, 0.05%)</title><rect x="11.3" y="261" width="0.5" height="15.0" fill="rgb(233,49,4)" rx="2" ry="2" />
<text  x="14.27" y="271.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (7,250,000 samples, 0.11%)</title><rect x="12.5" y="213" width="1.3" height="15.0" fill="rgb(252,185,0)" rx="2" ry="2" />
<text  x="15.46" y="223.5" ></text>
</g>
<g >
<title>vfs_read (23,250,000 samples, 0.36%)</title><rect x="1180.1" y="181" width="4.3" height="15.0" fill="rgb(211,27,10)" rx="2" ry="2" />
<text  x="1183.13" y="191.5" ></text>
</g>
<g >
<title>__close (1,750,000 samples, 0.03%)</title><rect x="11.9" y="277" width="0.3" height="15.0" fill="rgb(218,146,9)" rx="2" ry="2" />
<text  x="14.87" y="287.5" ></text>
</g>
<g >
<title>clear_page_erms (5,000,000 samples, 0.08%)</title><rect x="1028.9" y="117" width="0.9" height="15.0" fill="rgb(219,158,48)" rx="2" ry="2" />
<text  x="1031.86" y="127.5" ></text>
</g>
<g >
<title>[liblzma.so.5.2.5] (152,000,000 samples, 2.34%)</title><rect x="1031.0" y="277" width="27.7" height="15.0" fill="rgb(216,2,38)" rx="2" ry="2" />
<text  x="1034.05" y="287.5" >[..</text>
</g>
<g >
<title>ext4_da_write_end (750,000 samples, 0.01%)</title><rect x="1189.2" y="117" width="0.1" height="15.0" fill="rgb(218,80,5)" rx="2" ry="2" />
<text  x="1192.18" y="127.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1,500,000 samples, 0.02%)</title><rect x="1030.0" y="165" width="0.3" height="15.0" fill="rgb(246,107,17)" rx="2" ry="2" />
<text  x="1033.00" y="175.5" ></text>
</g>
<g >
<title>security_file_permission (1,500,000 samples, 0.02%)</title><rect x="15.6" y="165" width="0.3" height="15.0" fill="rgb(213,140,16)" rx="2" ry="2" />
<text  x="18.64" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_read (23,500,000 samples, 0.36%)</title><rect x="1180.1" y="213" width="4.3" height="15.0" fill="rgb(219,172,28)" rx="2" ry="2" />
<text  x="1183.08" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,750,000 samples, 0.06%)</title><rect x="1189.3" y="293" width="0.7" height="15.0" fill="rgb(243,71,31)" rx="2" ry="2" />
<text  x="1192.32" y="303.5" ></text>
</g>
<g >
<title>ksys_read (6,750,000 samples, 0.10%)</title><rect x="14.7" y="213" width="1.2" height="15.0" fill="rgb(252,195,24)" rx="2" ry="2" />
<text  x="17.69" y="223.5" ></text>
</g>
<g >
<title>read (24,250,000 samples, 0.37%)</title><rect x="1180.0" y="261" width="4.4" height="15.0" fill="rgb(246,47,32)" rx="2" ry="2" />
<text  x="1182.99" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,500,000 samples, 0.04%)</title><rect x="1188.9" y="261" width="0.4" height="15.0" fill="rgb(247,174,52)" rx="2" ry="2" />
<text  x="1191.86" y="271.5" ></text>
</g>
<g >
<title>exit_mm (3,750,000 samples, 0.06%)</title><rect x="1189.3" y="213" width="0.7" height="15.0" fill="rgb(206,37,53)" rx="2" ry="2" />
<text  x="1192.32" y="223.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2,000,000 samples, 0.03%)</title><rect x="1189.6" y="85" width="0.4" height="15.0" fill="rgb(232,41,41)" rx="2" ry="2" />
<text  x="1192.64" y="95.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1,500,000 samples, 0.02%)</title><rect x="1030.3" y="165" width="0.2" height="15.0" fill="rgb(240,90,7)" rx="2" ry="2" />
<text  x="1033.27" y="175.5" ></text>
</g>
<g >
<title>release_pages (1,750,000 samples, 0.03%)</title><rect x="1189.7" y="53" width="0.3" height="15.0" fill="rgb(222,32,16)" rx="2" ry="2" />
<text  x="1192.68" y="63.5" ></text>
</g>
<g >
<title>handle_pte_fault (5,250,000 samples, 0.08%)</title><rect x="1179.0" y="165" width="0.9" height="15.0" fill="rgb(243,88,41)" rx="2" ry="2" />
<text  x="1181.99" y="175.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (1,250,000 samples, 0.02%)</title><rect x="13.5" y="181" width="0.3" height="15.0" fill="rgb(216,125,47)" rx="2" ry="2" />
<text  x="16.55" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,750,000 samples, 0.03%)</title><rect x="11.9" y="261" width="0.3" height="15.0" fill="rgb(214,20,40)" rx="2" ry="2" />
<text  x="14.87" y="271.5" ></text>
</g>
<g >
<title>ksys_read (23,500,000 samples, 0.36%)</title><rect x="1180.1" y="197" width="4.3" height="15.0" fill="rgb(251,170,33)" rx="2" ry="2" />
<text  x="1183.08" y="207.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1,250,000 samples, 0.02%)</title><rect x="1030.3" y="149" width="0.2" height="15.0" fill="rgb(249,214,51)" rx="2" ry="2" />
<text  x="1033.32" y="159.5" ></text>
</g>
<g >
<title>handle_pte_fault (12,500,000 samples, 0.19%)</title><rect x="1028.3" y="197" width="2.2" height="15.0" fill="rgb(223,204,47)" rx="2" ry="2" />
<text  x="1031.27" y="207.5" ></text>
</g>
<g >
<title>ext4_dx_readdir (1,000,000 samples, 0.02%)</title><rect x="14.0" y="181" width="0.1" height="15.0" fill="rgb(224,88,45)" rx="2" ry="2" />
<text  x="16.96" y="191.5" ></text>
</g>
<g >
<title>handle_pte_fault (3,500,000 samples, 0.05%)</title><rect x="19.0" y="197" width="0.6" height="15.0" fill="rgb(223,80,30)" rx="2" ry="2" />
<text  x="22.01" y="207.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (750,000 samples, 0.01%)</title><rect x="15.8" y="149" width="0.1" height="15.0" fill="rgb(212,158,19)" rx="2" ry="2" />
<text  x="18.78" y="159.5" ></text>
</g>
<g >
<title>unmap_single_vma (3,250,000 samples, 0.05%)</title><rect x="1189.4" y="149" width="0.6" height="15.0" fill="rgb(205,124,30)" rx="2" ry="2" />
<text  x="1192.41" y="159.5" ></text>
</g>
<g >
<title>mmput (3,750,000 samples, 0.06%)</title><rect x="1189.3" y="197" width="0.7" height="15.0" fill="rgb(207,169,7)" rx="2" ry="2" />
<text  x="1192.32" y="207.5" ></text>
</g>
<g >
<title>pipe_read (22,500,000 samples, 0.35%)</title><rect x="1180.2" y="149" width="4.1" height="15.0" fill="rgb(243,222,49)" rx="2" ry="2" />
<text  x="1183.17" y="159.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (750,000 samples, 0.01%)</title><rect x="1029.9" y="149" width="0.1" height="15.0" fill="rgb(223,115,8)" rx="2" ry="2" />
<text  x="1032.86" y="159.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,500,000 samples, 0.02%)</title><rect x="11.9" y="229" width="0.3" height="15.0" fill="rgb(234,74,40)" rx="2" ry="2" />
<text  x="14.91" y="239.5" ></text>
</g>
<g >
<title>walk_component (2,250,000 samples, 0.03%)</title><rect x="12.8" y="133" width="0.4" height="15.0" fill="rgb(239,216,2)" rx="2" ry="2" />
<text  x="15.78" y="143.5" ></text>
</g>
<g >
<title>new_sync_write (7,000,000 samples, 0.11%)</title><rect x="16.5" y="197" width="1.3" height="15.0" fill="rgb(208,207,0)" rx="2" ry="2" />
<text  x="19.51" y="207.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,500,000 samples, 0.02%)</title><rect x="11.9" y="213" width="0.3" height="15.0" fill="rgb(212,34,28)" rx="2" ry="2" />
<text  x="14.91" y="223.5" ></text>
</g>
<g >
<title>do_sys_openat2 (2,750,000 samples, 0.04%)</title><rect x="14.2" y="213" width="0.5" height="15.0" fill="rgb(217,146,23)" rx="2" ry="2" />
<text  x="17.19" y="223.5" ></text>
</g>
<g >
<title>generic_write_end (750,000 samples, 0.01%)</title><rect x="1189.2" y="101" width="0.1" height="15.0" fill="rgb(248,122,17)" rx="2" ry="2" />
<text  x="1192.18" y="111.5" ></text>
</g>
<g >
<title>iterate_dir (1,000,000 samples, 0.02%)</title><rect x="14.0" y="213" width="0.1" height="15.0" fill="rgb(250,116,35)" rx="2" ry="2" />
<text  x="16.96" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,000,000 samples, 0.05%)</title><rect x="14.1" y="261" width="0.6" height="15.0" fill="rgb(215,220,18)" rx="2" ry="2" />
<text  x="17.14" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (7,000,000 samples, 0.11%)</title><rect x="1178.7" y="229" width="1.3" height="15.0" fill="rgb(213,172,0)" rx="2" ry="2" />
<text  x="1181.72" y="239.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (1,750,000 samples, 0.03%)</title><rect x="1030.5" y="213" width="0.4" height="15.0" fill="rgb(222,131,43)" rx="2" ry="2" />
<text  x="1033.55" y="223.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4,250,000 samples, 0.07%)</title><rect x="14.8" y="165" width="0.8" height="15.0" fill="rgb(215,217,27)" rx="2" ry="2" />
<text  x="17.82" y="175.5" ></text>
</g>
<g >
<title>new_sync_read (22,750,000 samples, 0.35%)</title><rect x="1180.1" y="165" width="4.2" height="15.0" fill="rgb(253,207,23)" rx="2" ry="2" />
<text  x="1183.13" y="175.5" ></text>
</g>
<g >
<title>ptep_clear_flush (1,750,000 samples, 0.03%)</title><rect x="1179.6" y="117" width="0.3" height="15.0" fill="rgb(246,90,12)" rx="2" ry="2" />
<text  x="1182.58" y="127.5" ></text>
</g>
<g >
<title>ksys_write (2,500,000 samples, 0.04%)</title><rect x="1188.9" y="213" width="0.4" height="15.0" fill="rgb(249,91,48)" rx="2" ry="2" />
<text  x="1191.86" y="223.5" ></text>
</g>
<g >
<title>__fput (1,000,000 samples, 0.02%)</title><rect x="12.0" y="149" width="0.2" height="15.0" fill="rgb(226,173,8)" rx="2" ry="2" />
<text  x="15.00" y="159.5" ></text>
</g>
<g >
<title>new_sync_write (2,250,000 samples, 0.03%)</title><rect x="1188.9" y="181" width="0.4" height="15.0" fill="rgb(235,122,30)" rx="2" ry="2" />
<text  x="1191.91" y="191.5" ></text>
</g>
<g >
<title>tar (42,750,000 samples, 0.66%)</title><rect x="10.1" y="309" width="7.8" height="15.0" fill="rgb(220,183,49)" rx="2" ry="2" />
<text  x="13.09" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages (1,750,000 samples, 0.03%)</title><rect x="1179.1" y="101" width="0.3" height="15.0" fill="rgb(221,126,51)" rx="2" ry="2" />
<text  x="1182.13" y="111.5" ></text>
</g>
<g >
<title>[unknown] (3,250,000 samples, 0.05%)</title><rect x="11.3" y="277" width="0.6" height="15.0" fill="rgb(229,99,45)" rx="2" ry="2" />
<text  x="14.27" y="287.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (23,500,000 samples, 0.36%)</title><rect x="1026.7" y="277" width="4.3" height="15.0" fill="rgb(254,54,15)" rx="2" ry="2" />
<text  x="1029.73" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24,000,000 samples, 0.37%)</title><rect x="1180.0" y="245" width="4.4" height="15.0" fill="rgb(221,145,30)" rx="2" ry="2" />
<text  x="1183.04" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_write (2,500,000 samples, 0.04%)</title><rect x="1188.9" y="229" width="0.4" height="15.0" fill="rgb(221,170,8)" rx="2" ry="2" />
<text  x="1191.86" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,250,000 samples, 0.13%)</title><rect x="12.4" y="245" width="1.5" height="15.0" fill="rgb(233,208,19)" rx="2" ry="2" />
<text  x="15.41" y="255.5" ></text>
</g>
<g >
<title>putname (1,000,000 samples, 0.02%)</title><rect x="13.4" y="165" width="0.1" height="15.0" fill="rgb(211,139,34)" rx="2" ry="2" />
<text  x="16.37" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,250,000 samples, 0.11%)</title><rect x="14.7" y="261" width="1.3" height="15.0" fill="rgb(238,177,46)" rx="2" ry="2" />
<text  x="17.69" y="271.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (750,000 samples, 0.01%)</title><rect x="14.0" y="149" width="0.1" height="15.0" fill="rgb(209,185,30)" rx="2" ry="2" />
<text  x="17.00" y="159.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1,000,000 samples, 0.02%)</title><rect x="1028.5" y="165" width="0.1" height="15.0" fill="rgb(217,192,8)" rx="2" ry="2" />
<text  x="1031.45" y="175.5" ></text>
</g>
<g >
<title>[liblzma.so.5.2.5] (5,557,500,000 samples, 85.70%)</title><rect x="19.7" y="293" width="1011.3" height="15.0" fill="rgb(205,224,21)" rx="2" ry="2" />
<text  x="22.69" y="303.5" >[liblzma.so.5.2.5]</text>
</g>
<g >
<title>path_openat (2,000,000 samples, 0.03%)</title><rect x="14.2" y="181" width="0.4" height="15.0" fill="rgb(232,225,18)" rx="2" ry="2" />
<text  x="17.23" y="191.5" ></text>
</g>
<g >
<title>new_sync_read (4,250,000 samples, 0.07%)</title><rect x="14.8" y="181" width="0.8" height="15.0" fill="rgb(222,27,40)" rx="2" ry="2" />
<text  x="17.82" y="191.5" ></text>
</g>
<g >
<title>ext4_readdir (1,000,000 samples, 0.02%)</title><rect x="14.0" y="197" width="0.1" height="15.0" fill="rgb(208,52,4)" rx="2" ry="2" />
<text  x="16.96" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,750,000 samples, 0.15%)</title><rect x="17.9" y="293" width="1.8" height="15.0" fill="rgb(226,74,27)" rx="2" ry="2" />
<text  x="20.92" y="303.5" ></text>
</g>
<g >
<title>wp_page_copy (4,750,000 samples, 0.07%)</title><rect x="1179.1" y="133" width="0.8" height="15.0" fill="rgb(209,165,39)" rx="2" ry="2" />
<text  x="1182.08" y="143.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1,500,000 samples, 0.02%)</title><rect x="1030.0" y="133" width="0.3" height="15.0" fill="rgb(245,153,52)" rx="2" ry="2" />
<text  x="1033.00" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,000,000 samples, 0.12%)</title><rect x="16.4" y="277" width="1.5" height="15.0" fill="rgb(240,62,17)" rx="2" ry="2" />
<text  x="19.41" y="287.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (2,250,000 samples, 0.03%)</title><rect x="1188.9" y="165" width="0.4" height="15.0" fill="rgb(207,222,1)" rx="2" ry="2" />
<text  x="1191.91" y="175.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (2,000,000 samples, 0.03%)</title><rect x="12.8" y="101" width="0.4" height="15.0" fill="rgb(238,210,38)" rx="2" ry="2" />
<text  x="15.82" y="111.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2,000,000 samples, 0.03%)</title><rect x="16.9" y="133" width="0.4" height="15.0" fill="rgb(209,195,52)" rx="2" ry="2" />
<text  x="19.91" y="143.5" ></text>
</g>
<g >
<title>[tar] (2,250,000 samples, 0.03%)</title><rect x="10.9" y="277" width="0.4" height="15.0" fill="rgb(210,76,3)" rx="2" ry="2" />
<text  x="13.86" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages (3,000,000 samples, 0.05%)</title><rect x="16.7" y="149" width="0.6" height="15.0" fill="rgb(238,129,32)" rx="2" ry="2" />
<text  x="19.73" y="159.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (5,250,000 samples, 0.08%)</title><rect x="18.7" y="277" width="1.0" height="15.0" fill="rgb(246,200,44)" rx="2" ry="2" />
<text  x="21.73" y="287.5" ></text>
</g>
<g >
<title>__lock_text_start (18,750,000 samples, 0.29%)</title><rect x="1180.4" y="101" width="3.4" height="15.0" fill="rgb(252,199,21)" rx="2" ry="2" />
<text  x="1183.36" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,250,000 samples, 0.02%)</title><rect x="13.9" y="245" width="0.2" height="15.0" fill="rgb(209,62,28)" rx="2" ry="2" />
<text  x="16.91" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,000,000 samples, 0.06%)</title><rect x="18.9" y="213" width="0.7" height="15.0" fill="rgb(205,46,20)" rx="2" ry="2" />
<text  x="21.92" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (23,500,000 samples, 0.36%)</title><rect x="1026.7" y="261" width="4.3" height="15.0" fill="rgb(237,52,45)" rx="2" ry="2" />
<text  x="1029.73" y="271.5" ></text>
</g>
<g >
<title>do_group_exit (3,750,000 samples, 0.06%)</title><rect x="1189.3" y="245" width="0.7" height="15.0" fill="rgb(218,171,37)" rx="2" ry="2" />
<text  x="1192.32" y="255.5" ></text>
</g>
<g >
<title>anon_pipe_buf_release (1,750,000 samples, 0.03%)</title><rect x="1183.8" y="133" width="0.3" height="15.0" fill="rgb(252,56,0)" rx="2" ry="2" />
<text  x="1186.77" y="143.5" ></text>
</g>
<g >
<title>do_open (1,500,000 samples, 0.02%)</title><rect x="14.3" y="165" width="0.3" height="15.0" fill="rgb(221,62,10)" rx="2" ry="2" />
<text  x="17.32" y="175.5" ></text>
</g>
<g >
<title>do_wp_page (4,750,000 samples, 0.07%)</title><rect x="1179.1" y="149" width="0.8" height="15.0" fill="rgb(226,48,32)" rx="2" ry="2" />
<text  x="1182.08" y="159.5" ></text>
</g>
<g >
<title>__lock_text_start (1,250,000 samples, 0.02%)</title><rect x="1189.7" y="37" width="0.2" height="15.0" fill="rgb(223,132,36)" rx="2" ry="2" />
<text  x="1192.68" y="47.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5,250,000 samples, 0.08%)</title><rect x="1179.0" y="181" width="0.9" height="15.0" fill="rgb(237,132,47)" rx="2" ry="2" />
<text  x="1181.99" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (3,750,000 samples, 0.06%)</title><rect x="1189.3" y="261" width="0.7" height="15.0" fill="rgb(220,81,27)" rx="2" ry="2" />
<text  x="1192.32" y="271.5" ></text>
</g>
<g >
<title>do_exit (3,750,000 samples, 0.06%)</title><rect x="1189.3" y="229" width="0.7" height="15.0" fill="rgb(239,70,10)" rx="2" ry="2" />
<text  x="1192.32" y="239.5" ></text>
</g>
<g >
<title>rw_verify_area (1,750,000 samples, 0.03%)</title><rect x="15.6" y="181" width="0.3" height="15.0" fill="rgb(254,79,13)" rx="2" ry="2" />
<text  x="18.60" y="191.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1,750,000 samples, 0.03%)</title><rect x="1179.1" y="117" width="0.3" height="15.0" fill="rgb(229,145,24)" rx="2" ry="2" />
<text  x="1182.13" y="127.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1,250,000 samples, 0.02%)</title><rect x="1189.0" y="117" width="0.2" height="15.0" fill="rgb(240,64,23)" rx="2" ry="2" />
<text  x="1191.95" y="127.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,250,000 samples, 0.07%)</title><rect x="18.9" y="229" width="0.8" height="15.0" fill="rgb(243,186,51)" rx="2" ry="2" />
<text  x="21.92" y="239.5" ></text>
</g>
<g >
<title>all (6,484,500,000 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(239,90,54)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>pipe_write (7,000,000 samples, 0.11%)</title><rect x="16.5" y="181" width="1.3" height="15.0" fill="rgb(210,114,17)" rx="2" ry="2" />
<text  x="19.51" y="191.5" ></text>
</g>
<g >
<title>lookup_fast (2,000,000 samples, 0.03%)</title><rect x="12.8" y="117" width="0.4" height="15.0" fill="rgb(222,33,52)" rx="2" ry="2" />
<text  x="15.82" y="127.5" ></text>
</g>
<g >
<title>lzma_crc64 (23,750,000 samples, 0.37%)</title><rect x="1184.5" y="277" width="4.3" height="15.0" fill="rgb(236,124,20)" rx="2" ry="2" />
<text  x="1187.50" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (750,000 samples, 0.01%)</title><rect x="10.7" y="277" width="0.2" height="15.0" fill="rgb(214,37,49)" rx="2" ry="2" />
<text  x="13.73" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (14,000,000 samples, 0.22%)</title><rect x="1028.0" y="213" width="2.5" height="15.0" fill="rgb(217,7,24)" rx="2" ry="2" />
<text  x="1031.00" y="223.5" ></text>
</g>
<g >
<title>page_remove_rmap (750,000 samples, 0.01%)</title><rect x="1189.5" y="85" width="0.1" height="15.0" fill="rgb(218,80,38)" rx="2" ry="2" />
<text  x="1192.50" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,750,000 samples, 0.06%)</title><rect x="1189.3" y="277" width="0.7" height="15.0" fill="rgb(215,228,54)" rx="2" ry="2" />
<text  x="1192.32" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,500,000 samples, 0.04%)</title><rect x="1188.9" y="245" width="0.4" height="15.0" fill="rgb(208,165,21)" rx="2" ry="2" />
<text  x="1191.86" y="255.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (18,750,000 samples, 0.29%)</title><rect x="1180.4" y="117" width="3.4" height="15.0" fill="rgb(210,126,48)" rx="2" ry="2" />
<text  x="1183.36" y="127.5" ></text>
</g>
</g>
</svg>
